'''
Добавьте в пакет, созданный на семинаре шахматный модуль.

Внутри него напишите код, решающий задачу о 8 ферзях, 
включающий в себя функцию is_attacking(q1,q2), 
проверяющую, бьют ли ферзи друг друга и check_queens(queens), 
которая проверяет все возможные пары ферзей.
Известно, что на доске 8×8 можно расставить 8 ферзей так, 
чтобы они не били друг друга. 

Вам дана расстановка 8 ферзей на доске, определите, 
есть ли среди них пара бьющих друг друга.

Программа получает на вход восемь пар чисел, 
каждое число от 1 до 8 - координаты 8 ферзей. 
Если ферзи не бьют друг друга верните истину, 
а если бьют - ложь. Не забудьте напечатать результат.

На входе:
queens = [(1, 1), (2, 3), (3, 5), (4, 7), (5, 2), (6, 4), (7, 6), (8, 8)] 

На выходе:
True
'''


def is_attacking(q1, q2):
    x1, y1 = map(int, q1)
    x2, y2 = map(int, q2)
    step_x = abs(x2 - x1)
    step_y = abs(y2 - y1)
    if step_x == step_y:            # Так ходит слон
        # print('бьёт')
        return True
    elif x1 == x2 or y1 == y2:      # Так ходит ладья
        # print('бьёт')
        return True
    else:
        # print('не бьёт')
        return False
    

# def is_attacking(q1, q2):
#     # Проверяем, бьют ли ферзи друг друга
#     return q1[0] == q2[0] or q1[1] == q2[1] or abs(q1[0] - q2[0]) == abs(q1[1] - q2[1])    

def check_queens(comb):
    for i in range(len(comb)):
        for j in range(i+1, len(comb)):
            if is_attacking(comb[i], comb[j]):
                return False
    return True


queens = [(1, 1), (2, 3), (3, 5), (4, 7), (5, 2), (6, 4), (7, 6), (8, 8)]       # False
# queens = [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)]       # False
# queens = [(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7), (1, 8)]       # False
# queens = [(1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (8, 1)]       # False
# queens = []                                                                     # True
# queens = [(4, 4)]                                                               # True


print(check_queens(queens))