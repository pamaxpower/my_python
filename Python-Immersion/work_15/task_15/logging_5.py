'''
basicConfig
- нужна для базовой настройки логгеров

    * Уровень логирования:

параметр level принимает константу с числом уровня логирования,
все значения меньше переданного будут игнорироваться

    * Файл журнала:

● filename — путь и имя файла для сохранения журнала логирования.
● filemode — режим записи. Если передать 'w', каждый запуск будет удалять
старые данные из журнала. Можно не указывать аргумента, тогда данные
будут дописываться в конец файла
● encoding — кодировка для сохранения журнала
● errors — способ обработки ошибок при открытии файла. По умолчанию
используется режим backslashreplace. Он заменяет искаженные данные
управляющими последовательностями Python с обратной косой чертой.

    * Формат сохранения события:
параметр format изменяет стандартную строку логирования

● % — старый стиль форматирования текста с использованием символа %.
Это стиль по умолчанию.
● { — форматирование с использованием фигурных скобок. Метод str.format.
● $ — форматирование в стиле string.Temp

'''

import logging
from other import log_all

FORMAT = '{levelname:<8} - {asctime}. В модуле "{name}" ' \
         'в строке {lineno:03d} функция "{funcName}()" ' \
         'в {created} секунд записала сообщение: {msg}'
# levelname:<8 - выравниваение по левому краю на 8 символов
# asctime - время, в которое произошло событие
# name - имя модуля
# lineno:03d - номер строки
# funcName - имя функции, внутри которой произошло событие
# created - время в секундах с начала времен (1.01.1970 00:00)
# msg - сообщение


logging.basicConfig(format=FORMAT, style='{', level=logging.INFO, \
                    # filename='project1.log.', filemode='w',\
                    # ncoding='utf-8', level=logging.INFO
                    )
logger = logging.getLogger('main')
logger.warning('Внимание! Используем вызов функции из другого модуля')
log_all()
