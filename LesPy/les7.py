"""
Анонимные функции. Лямбда
"""
def f(x):
    return x**2

g = f           # функция имеет тип данный function, поэтому ее можно присвоить другой переменной
print(f(1))
print(g(1))     # работать она будет также как и заданная функция f

# В питоне функция имеет свой тип данных и может использоваться как переменная, 
# поэтому она может быть вызываема другой функцией

# def sum(x, y):      # отдельная функция, которая возвращает сумму элементов
#     return x + y

total = lambda x, y: x + y  # упрощенная запись функции sum

def mult(x, y):     # отдельная функция, возвращающая произведение элементов
    return x * y

def calc(op, a, b):     # третья функция которая в качестве аргумента принимает операцию, а в качестве операндов два аргумента
    # return op(a, b)
    print(op(a, b))

calc(mult, 4, 5)        # в качестве операции передаем функцию mult, в качестве операндов два числа
calc(total, 3, 6)
calc(lambda x, y: x + y, 3, 6)  # либо записывать без дополнительного присваивания переменной

